diff -Naur libreswan-3.15-orig/programs/pluto/x509.c libreswan-3.15/programs/pluto/x509.c
--- libreswan-3.15-orig/programs/pluto/x509.c	2015-08-24 22:28:32.000000000 -0400
+++ libreswan-3.15/programs/pluto/x509.c	2016-06-23 15:54:33.992702860 -0400
@@ -423,9 +423,6 @@
 generalName_t *gndp_from_nss_cert(CERTCertificate *cert)
 {
 	SECItem crlval;
-	CERTCrlDistributionPoints *dps = NULL;
-	CRLDistributionPoint *point = NULL;
-	generalName_t *gndp = NULL;
 
 	if (cert == NULL)
 		return NULL;
@@ -437,25 +434,45 @@
 		return NULL;
 	}
 
-	if ((dps = CERT_DecodeCRLDistributionPoints(cert->arena,
-						    &crlval)) == NULL) {
+	CERTCrlDistributionPoints *dps = CERT_DecodeCRLDistributionPoints(cert->arena, &crlval);
+
+	if (dps == NULL) {
 		DBG(DBG_X509,
 		    DBG_log("could not decode distribution points ext %d",
 							       PORT_GetError()));
 		return NULL;
 	}
 
-	/* some common code, refactor */
-	point = dps->distPoints[0];
+	CRLDistributionPoint **points = dps->distPoints;
+	generalName_t *gndp_list = NULL;
 
-	if (point != NULL && point->distPointType == generalName &&
-			     point->distPoint.fullName != NULL &&
-			     point->distPoint.fullName->type == certURI) {
-		gndp = alloc_thing(generalName_t, "converted gn");
-		convert_nss_gn_to_pluto_gn(point->distPoint.fullName, gndp);
+	/* Certificate can have multiple distribution points */
+	for (; points != NULL && *points != NULL; points++) {
+		CRLDistributionPoint *point = *points;
+
+		if (point->distPointType == generalName &&
+			point->distPoint.fullName != NULL) {
+			CERTGeneralName *first_name, *name;
+
+			/* Each point is a linked list. */
+			first_name = name = point->distPoint.fullName;
+			do {
+				if (name->type == certURI) {
+					generalName_t *gndp;
+
+					/* Add single point to return list */
+					gndp = alloc_thing(generalName_t,
+							"converted gn");
+					convert_nss_gn_to_pluto_gn(name, gndp);
+					gndp->next = gndp_list;
+					gndp_list = gndp;
+				}
+				name = CERT_GetNextGeneralName(name);
+			} while (name != NULL && name != first_name);
+		}
 	}
 
-	return gndp;
+	return gndp_list;
 }
 
 char *find_dercrl_uri(chunk_t *dercrl)
